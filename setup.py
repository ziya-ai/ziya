#!/usr/bin/env python

from setuptools import setup, find_packages
from setuptools.command.bdist_wheel import bdist_wheel
import os
import subprocess
import sys
import atexit

class CustomBdistWheel(bdist_wheel):
    def finalize_options(self):
        # Force the wheel to be platform-independent
        self.root_is_pure = True
        # Ensure the wheel is tagged as py3-none-any
        self.plat_name_supplied = True
        self.plat_name = "any"
        bdist_wheel.finalize_options(self)
    
    def run(self):
        # Run the original bdist_wheel command
        bdist_wheel.run(self)
        
        # Register the post-build hook to run when the script exits
        atexit.register(run_post_build)

def run_post_build():
    """Run the post-build script after the build is complete."""
    # Find the post-build script
    script_path = os.path.join('scripts', 'post_build.py')
    
    if os.path.exists(script_path):
        print(f"\nRunning post-build script: {script_path}")
        subprocess.run([sys.executable, script_path], check=True)
        print("Post-build script completed successfully")
    else:
        print(f"\nERROR: Post-build script not found at {script_path}")

# This setup.py is generated by Poetry and will be overwritten
# We're just adding our custom command class
setup(
    name="ziya",
    version="0.3.5",
    packages=find_packages(include=["app", "app.*", "mcp_servers", "app.mcp_servers.*"]),
    include_package_data=True,
    zip_safe=False,
    cmdclass={
        'bdist_wheel': CustomBdistWheel,
    },
)
